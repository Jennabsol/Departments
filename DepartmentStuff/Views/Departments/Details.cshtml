@model DepartmentStuff.Models.ViewModels.DepartmentDetailsView

@{
    ViewData["Title"] = "Details";
}

<h1>@Html.DisplayFor(model => model.department.Name) Department</h1>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.department.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.department.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.department.Budget)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.department.Budget)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.SuperVisor)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.SuperVisor)
        </dd>
    </dl>
    <h4>Employees in this Department:</h4>
    <div>
        @foreach (var item in Model.department.employees)
        {
            var supervisorStyle = item.IsSuperVisor ? "background-color: #00c0d4; color: white" : null;
            var employeeName = item.IsSuperVisor ? $"{item.FirstName} {item.LastName} - Supervisor" : $"{item.FirstName} {item.LastName}";
            <div class="card" style="width: 18rem;">
                <div class="card-body" style="@supervisorStyle">
                    <h5 class="card-title">
                        @employeeName
                    </h5>
                </div>
            </div>


        }

    </div>
<div>
    @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
    <a asp-action="Index">Back to List</a>
</div>
